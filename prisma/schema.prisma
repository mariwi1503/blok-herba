// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model OrganizationProfile {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  heroTagline   String
  footerTagline String
  vision        String
  mission       String[]
  history       String
  about         String
  address       String
  phone         String
  email         String
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  fullName     String        @db.VarChar(100)
  phone        String        @unique @db.VarChar(100)
  hashPassword String
  residentId   String        @unique
  isActive     Boolean       @default(true)
  role         UserRole
  Committee    Committee     @relation(fields: [committeeId], references: [id])
  committeeId  String
  Transaction  Transaction[]
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  FINANCE
}

model House {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  number   String     @unique
  type     HouseType
  isFilled Boolean    @default(false)
  Resident Resident[]
}

enum HouseType {
  RUMAH
  KOS
}

model FamilyCard {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  number String @unique @db.Char(16)
  member Int

  Resident Resident[]
}

model Resident {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  fullName      String
  idCardNumber  String        @unique
  idCardType    IdCardType
  phone         String?
  maritalStatus MaritalStatus
  gender        Gender
  isHead        Boolean
  image         String?

  House        House       @relation(fields: [houseNumber], references: [number])
  houseNumber  String
  Committee    Committee?  @relation(fields: [committeeId], references: [id])
  committeeId  String?
  FamilyCard   FamilyCard? @relation(fields: [familyCardId], references: [id])
  familyCardId String?
}

enum MaritalStatus {
  KAWIN
  BELUM_KAWIN
  DUDA_JANDA
}

enum IdCardType {
  BATAM
  NON_BATAM
}

enum Gender {
  L
  P
}

model Committee {
  id        String   @id
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  label       String
  description String
  User        User[]
  Resident    Resident[]
}

model Transaction {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  date        DateTime            @default(now())
  description String
  type        TransactionType
  category    TransactionCategory
  amount      Decimal             @db.Decimal(12, 2)
  balance     Decimal            @db.Decimal(12, 2)
  source String?

  User        User?               @relation(fields: [userId], references: [id])
  userId      String?
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum TransactionCategory {
  IURAN
  SUMBANGAN
  KONSUMSI
  KEBERSIHAN
  INFRASTRUKTUR
  ADMINISTRASI
  KEAMANAN
  LAIN
}
